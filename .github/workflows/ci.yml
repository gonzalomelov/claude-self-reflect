name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ created ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: claude-self-reflection/package-lock.json
    
    - name: Install dependencies
      run: |
        cd claude-self-reflection
        npm ci
    
    - name: Run lint
      run: |
        cd claude-self-reflection
        npm run lint
    
    - name: Build TypeScript
      run: |
        cd claude-self-reflection
        npm run build
    
    - name: Run tests
      run: |
        cd claude-self-reflection
        npm test
      env:
        CI: true

  docker-build:
    runs-on: ubuntu-latest
    needs: lint-and-test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker images
      run: |
        docker compose build
    
    - name: Test Docker stack
      run: |
        docker compose up -d qdrant
        sleep 10
        curl -f http://localhost:6333/ || exit 1
        docker compose down

  publish-npm:
    needs: [lint-and-test, docker-build]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'created'
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Install dependencies
      run: |
        cd claude-self-reflection
        npm ci
    
    - name: Build package
      run: |
        cd claude-self-reflection
        npm run build
    
    - name: Publish to npm
      run: |
        cd claude-self-reflection
        npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  create-github-release:
    needs: publish-npm
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Create release archive
      run: |
        tar -czf claude-self-reflection-${{ github.event.release.tag_name }}.tar.gz \
          --exclude='node_modules' \
          --exclude='venv' \
          --exclude='.git' \
          --exclude='data' \
          .
    
    - name: Upload Release Asset
      uses: softprops/action-gh-release@v2
      with:
        files: ./claude-self-reflection-${{ github.event.release.tag_name }}.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}