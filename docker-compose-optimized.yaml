version: '3.8'

services:
  # Qdrant vector database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    ports:
      - "6333:6333"
      - "6334:6334"  # gRPC port
    volumes:
      - qdrant-storage:/qdrant/storage
    environment:
      - QDRANT__SERVICE__GRPC_PORT=6334
    restart: unless-stopped
    mem_limit: 1g
    memswap_limit: 1g

  # Memory-optimized streaming importer
  streaming-importer:
    build:
      context: .
      dockerfile: Dockerfile.streaming-importer
    container_name: streaming-importer
    depends_on:
      - qdrant
    volumes:
      - /Users/ramakrishnanannaswamy/.claude/projects:/logs:ro
      - ./config-isolated:/config
      - ./scripts:/scripts:ro
    environment:
      - QDRANT_URL=http://qdrant:6333
      - STATE_FILE=/config/imported-files.json
      - EMBEDDING_MODEL=sentence-transformers/all-MiniLM-L6-v2
      - BATCH_SIZE=20
      - CHUNK_SIZE=5
      - MAX_MEMORY_MB=400
      - CHECKPOINT_INTERVAL=100
      - PYTHONUNBUFFERED=1
    mem_limit: 512m
    memswap_limit: 512m
    restart: no
    command: python /scripts/streaming-importer.py

  # Background import watcher service
  import-watcher:
    build:
      context: .
      dockerfile: Dockerfile.watcher
    container_name: import-watcher
    depends_on:
      - qdrant
    volumes:
      - /Users/ramakrishnanannaswamy/.claude/projects:/logs:ro
      - ./config-isolated:/config
      - ./scripts:/scripts:ro
    environment:
      - QDRANT_URL=http://qdrant:6333
      - STATE_FILE=/config/imported-files.json
      - WATCH_INTERVAL=60
      - PYTHONUNBUFFERED=1
      - VOYAGE_KEY=${VOYAGE_KEY}
      - VOYAGE_KEY_2=${VOYAGE_KEY_2}
    mem_limit: 256m
    memswap_limit: 256m
    restart: unless-stopped

volumes:
  qdrant-storage: