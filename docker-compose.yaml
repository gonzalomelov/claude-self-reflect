volumes:
  qdrant_data:

services:
  # Fix permissions for config directory
  init-permissions:
    image: alpine
    command: chown -R 1000:1000 /config
    volumes:
      - ${CONFIG_PATH:-~/.claude-self-reflect/config}:/config
    profiles: ["watch", "mcp", "import", "async", "safe-watch"]

  # Qdrant vector database - the heart of semantic search
  qdrant:
    image: qdrant/qdrant:v1.15.1
    container_name: claude-reflection-qdrant
    ports:
      - "${QDRANT_PORT:-6333}:6333"
    volumes:
      - qdrant_data:/qdrant/storage
      - ./config/qdrant-config.yaml:/qdrant/config/config.yaml:ro
    environment:
      - QDRANT__LOG_LEVEL=INFO
      - QDRANT__SERVICE__HTTP_PORT=6333
    restart: unless-stopped
    mem_limit: ${QDRANT_MEMORY:-4g}
    memswap_limit: ${QDRANT_MEMORY:-4g}

  # One-time import service (runs once then exits)
  importer:
    build:
      context: .
      dockerfile: Dockerfile.importer
    container_name: claude-reflection-importer
    depends_on:
      - init-permissions
      - qdrant
    volumes:
      - ${CLAUDE_LOGS_PATH:-~/.claude/projects}:/logs:ro
      - ${CONFIG_PATH:-~/.claude-self-reflect/config}:/config
      - ./scripts:/scripts:ro
    environment:
      - QDRANT_URL=http://qdrant:6333
      - STATE_FILE=/config/imported-files.json
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - VOYAGE_API_KEY=${VOYAGE_API_KEY:-}
      - VOYAGE_KEY=${VOYAGE_KEY:-}
      - PREFER_LOCAL_EMBEDDINGS=${PREFER_LOCAL_EMBEDDINGS:-true}
      - EMBEDDING_MODEL=${EMBEDDING_MODEL:-voyage-3}
      - BATCH_SIZE=${BATCH_SIZE:-50}
      - CHUNK_SIZE=${CHUNK_SIZE:-10}
      - PYTHONUNBUFFERED=1
    restart: "no"
    profiles: ["import"]
    command: python /scripts/import-conversations-unified.py

  # Continuous watcher service (optional) - DEPRECATED, use streaming-importer
  watcher:
    build:
      context: .
      dockerfile: Dockerfile.watcher
    container_name: claude-reflection-watcher
    depends_on:
      - init-permissions
      - qdrant
    volumes:
      - ${CLAUDE_LOGS_PATH:-~/.claude/projects}:/logs:ro
      - ${CONFIG_PATH:-~/.claude-self-reflect/config}:/config
      - ./scripts:/scripts:ro
      - /tmp:/tmp
    environment:
      - QDRANT_URL=http://qdrant:6333
      - STATE_FILE=/config/imported-files.json
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - VOYAGE_API_KEY=${VOYAGE_API_KEY:-}
      - VOYAGE_KEY=${VOYAGE_KEY:-}
      - PREFER_LOCAL_EMBEDDINGS=${PREFER_LOCAL_EMBEDDINGS:-true}
      - EMBEDDING_MODEL=${EMBEDDING_MODEL:-voyage-3}
      - WATCH_INTERVAL=${WATCH_INTERVAL:-5}
      - MAX_MEMORY_MB=${MAX_MEMORY_MB:-250}
      - CHUNK_SIZE=${CHUNK_SIZE:-5}
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    profiles: ["watch-old"]
    mem_limit: 500m
    memswap_limit: 500m

  # Streaming importer service - Low memory continuous import
  streaming-importer:
    build:
      context: .
      dockerfile: Dockerfile.streaming-importer
    container_name: claude-reflection-streaming
    depends_on:
      - init-permissions
      - qdrant
    volumes:
      - ${CLAUDE_LOGS_PATH:-~/.claude/projects}:/logs:ro
      - ${CONFIG_PATH:-~/.claude-self-reflect/config}:/config
      - ./scripts:/scripts:ro
    environment:
      - QDRANT_URL=http://qdrant:6333
      - STATE_FILE=/config/streaming-state.json  # FIXED: Use streaming-specific state file
      - VOYAGE_API_KEY=${VOYAGE_API_KEY:-}
      - VOYAGE_KEY=${VOYAGE_KEY:-}
      - PREFER_LOCAL_EMBEDDINGS=${PREFER_LOCAL_EMBEDDINGS:-true}
      # Production CPU throttling settings
      - MAX_CPU_PERCENT_PER_CORE=25  # 25% per core = 400% total on 16 cores
      - MAX_CONCURRENT_EMBEDDINGS=1  # Limit concurrent embeddings
      - MAX_CONCURRENT_QDRANT=2  # Limit concurrent Qdrant operations
      - IMPORT_FREQUENCY=5  # Check every 5 seconds for faster processing
      - BATCH_SIZE=20  # Process 20 files at a time (increased from 3)
      - MEMORY_LIMIT_MB=1500  # Memory limit (increased to 1.5GB)
      - MAX_QUEUE_SIZE=500  # Increased queue size to handle backlog
      - MAX_BACKLOG_HOURS=24  # Alert if backlog > 24 hours
      - QDRANT_TIMEOUT=10  # 10 second timeout for Qdrant ops
      - MAX_RETRIES=3  # Retry failed operations
      - RETRY_DELAY=1  # Initial retry delay
      - PYTHONUNBUFFERED=1
      - LOGS_DIR=/logs
      - FASTEMBED_CACHE_PATH=/root/.cache/fastembed
      - MALLOC_ARENA_MAX=2  # MEMORY LEAK FIX: Limit glibc malloc arenas
    restart: "no"  # DISABLED - causes system overload
    profiles: ["watch-disabled"]  # Changed from "watch" to disable auto-start
    mem_limit: 2g  # Increased from 500m to 2GB
    memswap_limit: 2g
    cpus: 8.0  # Increased CPU limit to 8 cores for faster processing

  # Async streaming importer - Ground-up async rewrite
  async-importer:
    build:
      context: .
      dockerfile: Dockerfile.async-importer
    container_name: claude-reflection-async
    depends_on:
      - qdrant
    volumes:
      - ${CLAUDE_LOGS_PATH:-~/.claude/projects}:/logs:ro
      - ${CONFIG_PATH:-~/.claude-self-reflect/config}:/config
      - ./scripts:/scripts:ro
    environment:
      - QDRANT_URL=http://qdrant:6333
      - STATE_FILE=/config/imported-files.json
      - VOYAGE_API_KEY=${VOYAGE_API_KEY:-}
      - VOYAGE_KEY=${VOYAGE_KEY:-}
      - PREFER_LOCAL_EMBEDDINGS=${PREFER_LOCAL_EMBEDDINGS:-true}
      - WATCH_INTERVAL=${WATCH_INTERVAL:-5}
      - MAX_MEMORY_MB=${MAX_MEMORY_MB:-2000}
      - OPERATIONAL_MEMORY_MB=${OPERATIONAL_MEMORY_MB:-1500}
      - CHUNK_SIZE=${CHUNK_SIZE:-5}
      - HOT_WINDOW_MINUTES=${HOT_WINDOW_MINUTES:-15}
      - MAX_COLD_FILES_PER_CYCLE=${MAX_COLD_FILES_PER_CYCLE:-5}
      - THREAD_POOL_WORKERS=${THREAD_POOL_WORKERS:-2}
      - PYTHONUNBUFFERED=1
      - LOGS_DIR=/logs
      - FASTEMBED_CACHE_PATH=/root/.cache/fastembed
      - CURRENT_PROJECT_PATH=${PWD}
      - MALLOC_ARENA_MAX=2
    restart: unless-stopped
    profiles: ["async"]
    mem_limit: 4g
    memswap_limit: 4g

  # Safe watcher with hot/warm/cold priority
  safe-watcher:
    build:
      context: .
      dockerfile: Dockerfile.safe-watcher
    container_name: claude-reflection-safe-watcher
    depends_on:
      - init-permissions
      - qdrant
    volumes:
      - ${CLAUDE_LOGS_PATH:-~/.claude/projects}:/logs:ro
      - ${CONFIG_PATH:-~/.claude-self-reflect/config}:/config
      - ./scripts:/scripts:ro
    environment:
      - QDRANT_URL=http://qdrant:6333
      - STATE_FILE=/config/watcher-state.json
      - VOYAGE_KEY=${VOYAGE_KEY:-}
      - PREFER_LOCAL_EMBEDDINGS=${PREFER_LOCAL_EMBEDDINGS:-true}
      - HOT_WINDOW_MINUTES=${HOT_WINDOW_MINUTES:-15}
      - MAX_COLD_FILES_PER_CYCLE=${MAX_COLD_FILES_PER_CYCLE:-3}
      - MAX_MEMORY_MB=${MAX_MEMORY_MB:-300}
      - WATCH_INTERVAL_SECONDS=${WATCH_INTERVAL_SECONDS:-30}
      - MAX_FILES_PER_CYCLE=${MAX_FILES_PER_CYCLE:-10}
      - MAX_CHUNK_SIZE=${MAX_CHUNK_SIZE:-50}  # Messages per chunk for streaming
      - PYTHONUNBUFFERED=1
      - MALLOC_ARENA_MAX=2
    restart: "no"  # Manual start only - prevent system overload
    profiles: ["safe-watch"]  # Requires explicit profile to run
    mem_limit: 600m  # Increased from 400m to handle large files safely
    memswap_limit: 600m
    cpus: 1.0  # Single CPU core limit

  # MCP server for Claude integration
  mcp-server:
    build:
      context: .
      dockerfile: Dockerfile.mcp-server
    container_name: claude-reflection-mcp
    depends_on:
      - qdrant
    environment:
      - QDRANT_URL=http://qdrant:6333
      - VOYAGE_KEY=${VOYAGE_KEY:-}
      - PREFER_LOCAL_EMBEDDINGS=${PREFER_LOCAL_EMBEDDINGS:-true}
      - ENABLE_MEMORY_DECAY=${ENABLE_MEMORY_DECAY:-true}
      - DECAY_WEIGHT=${DECAY_WEIGHT:-0.3}
      - DECAY_SCALE_DAYS=${DECAY_SCALE_DAYS:-90}
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    stdin_open: true
    tty: true
    profiles: ["mcp"]

networks:
  default:
    name: claude-reflection-network
    external: false
