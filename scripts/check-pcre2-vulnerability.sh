#!/bin/bash

# Check PCRE2 vulnerability CVE-2025-58050 in Docker images
# Vulnerable version: 10.45-1
# Fixed version: 10.46 or later

echo "Checking PCRE2 vulnerability CVE-2025-58050 in Docker images..."
echo "============================================================"
echo ""

VULNERABLE_COUNT=0
SAFE_COUNT=0
IMAGES=()

# Check all Dockerfiles
for dockerfile in Dockerfile.*; do
    if [ -f "$dockerfile" ]; then
        IMAGE_NAME="claude-self-reflect-${dockerfile#Dockerfile.}"
        IMAGES+=("$IMAGE_NAME:$dockerfile")
    fi
done

# Build and check each image
for image_info in "${IMAGES[@]}"; do
    IMAGE_NAME="${image_info%:*}"
    DOCKERFILE="${image_info#*:}"
    
    echo "Checking $DOCKERFILE..."
    
    # Determine base image type
    BASE_IMAGE=$(grep "^FROM" "$DOCKERFILE" | head -1 | awk '{print $2}')
    
    if [[ "$BASE_IMAGE" == *"slim"* ]]; then
        # Debian-based image - check libpcre2-8-0
        VERSION=$(docker run --rm "$BASE_IMAGE" sh -c "apt list --installed 2>/dev/null | grep -i 'libpcre2-8-0' | awk -F' ' '{print \$2}'" 2>/dev/null)
        
        if [[ "$VERSION" == "10.45-1" ]]; then
            echo "  ❌ VULNERABLE: $DOCKERFILE uses $BASE_IMAGE with libpcre2-8-0 $VERSION"
            echo "     CVE-2025-58050: Heap buffer overflow in PCRE2"
            VULNERABLE_COUNT=$((VULNERABLE_COUNT + 1))
        elif [[ -n "$VERSION" ]]; then
            # Check if version is 10.46 or later
            MAJOR_MINOR=$(echo "$VERSION" | cut -d'-' -f1)
            if [[ "$MAJOR_MINOR" > "10.45" ]] || [[ "$MAJOR_MINOR" == "10.46" ]]; then
                echo "  ✅ SAFE: $DOCKERFILE uses $BASE_IMAGE with libpcre2-8-0 $VERSION (patched)"
                SAFE_COUNT=$((SAFE_COUNT + 1))
            else
                echo "  ⚠️  UNKNOWN: $DOCKERFILE uses $BASE_IMAGE with libpcre2-8-0 $VERSION"
            fi
        else
            echo "  ℹ️  No PCRE2 found in $BASE_IMAGE"
        fi
    elif [[ "$BASE_IMAGE" == *"alpine"* ]]; then
        # Alpine-based image - typically doesn't include PCRE2 by default
        echo "  ℹ️  Alpine image ($BASE_IMAGE) - typically not affected"
        SAFE_COUNT=$((SAFE_COUNT + 1))
    else
        echo "  ⚠️  Unknown base image type: $BASE_IMAGE"
    fi
    echo ""
done

echo "============================================================"
echo "Summary:"
echo "  Vulnerable images: $VULNERABLE_COUNT"
echo "  Safe images: $SAFE_COUNT"
echo ""

if [ $VULNERABLE_COUNT -gt 0 ]; then
    echo "⚠️  ACTION REQUIRED: Update base images or wait for Debian to release patched packages"
    echo ""
    echo "Remediation options:"
    echo "1. Wait for Debian to update libpcre2-8-0 to version 10.46+"
    echo "2. Switch to Alpine-based images (not affected)"
    echo "3. Add explicit upgrade commands in Dockerfiles"
    echo "4. Monitor https://security-tracker.debian.org/tracker/CVE-2025-58050 for updates"
    exit 1
else
    echo "✅ All images are safe or not affected by CVE-2025-58050"
    exit 0
fi